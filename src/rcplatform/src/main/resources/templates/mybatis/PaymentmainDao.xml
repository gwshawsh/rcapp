<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ruanchuangsoft.platform.dao.PaymentmainDao">

	<select id="queryObject" resultType="com.ruanchuangsoft.platform.entity.PaymentmainEntity">
		select
																			               		ifnull((select name from  sys_dept b where a.deptid=b.id),'') as deptidname,
																								                    ifnull((select enumvaluename from  enumtable b where a.paysource=b.enumvalueid and b.enumtype='1004'),'') as paysourceenumvaluename,
															               		ifnull((select accountno from  bankaccount b where a.payeeaccount=b.id),'') as payeeaccountaccountno,
												               		ifnull((select name from  paytype b where a.paytype=b.id),'') as paytypename,
															                    ifnull((select enumvaluename from  enumtable b where a.ordertype=b.enumvalueid and b.enumtype='1002'),'') as ordertypeenumvaluename,
												                    ifnull((select enumvaluename from  enumtable b where a.billstatus=b.enumvalueid and b.enumtype='1003'),'') as billstatusenumvaluename,
																						        a.*

		from paymentmain a where id = #{value}
	</select>

	<select id="queryList" resultType="com.ruanchuangsoft.platform.entity.PaymentmainEntity">
        select
																													                    ifnull((select name from  sys_dept b where a.deptid=b.id),'') as deptidname,
																																				                    ifnull((select enumvaluename from  enumtable b where a.paysource=b.enumvalueid and b.enumtype='1004'),'') as paysourceenumvaluename,
																					                    ifnull((select accountno from  bankaccount b where a.payeeaccount=b.id),'') as payeeaccountaccountno,
																                    ifnull((select name from  paytype b where a.paytype=b.id),'') as paytypename,
																					                    ifnull((select enumvaluename from  enumtable b where a.ordertype=b.enumvalueid and b.enumtype='1002'),'') as ordertypeenumvaluename,
																                    ifnull((select enumvaluename from  enumtable b where a.billstatus=b.enumvalueid and b.enumtype='1003'),'') as billstatusenumvaluename,
																																		        a.*
        from paymentmain a
        <where>
			                <if test="id != null and id != '' ">
                    `id` = #{id} and                 </if>
			                <if test="billno != null and billno != '' ">
                    `billno` = #{billno} and                 </if>
			                <if test="reqbillno != null and reqbillno != '' ">
                    `reqbillno` = #{reqbillno} and                 </if>
			                <if test="requser != null and requser != '' ">
                    `requser` = #{requser} and                 </if>
			                <if test="deptid != null and deptid != '' ">
                    `deptid` = #{deptid} and                 </if>
			                <if test="reqdate != null and reqdate != '' ">
                    `reqdate` = #{reqdate} and                 </if>
			                <if test="orderbillno != null and orderbillno != '' ">
                    `orderbillno` = #{orderbillno} and                 </if>
			                <if test="percent != null and percent != '' ">
                    `percent` = #{percent} and                 </if>
			                <if test="paytotal != null and paytotal != '' ">
                    `paytotal` = #{paytotal} and                 </if>
			                <if test="paysource != null and paysource != '' ">
                    `paysource` = #{paysource} and                 </if>
			                <if test="payee != null and payee != '' ">
                    `payee` = #{payee} and                 </if>
			                <if test="payeeaccount != null and payeeaccount != '' ">
                    `payeeaccount` = #{payeeaccount} and                 </if>
			                <if test="paytype != null and paytype != '' ">
                    `paytype` = #{paytype} and                 </if>
			                <if test="payreason != null and payreason != '' ">
                    `payreason` = #{payreason} and                 </if>
			                <if test="ordertype != null and ordertype != '' ">
                    `ordertype` = #{ordertype} and                 </if>
			                <if test="billstatus != null and billstatus != '' ">
                    `billstatus` = #{billstatus} and                 </if>
			                <if test="makeuser != null and makeuser != '' ">
                    `makeuser` = #{makeuser} and                 </if>
			                <if test="makedate != null and makedate != '' ">
                    `makedate` = #{makedate} and                 </if>
			                <if test="accuser != null and accuser != '' ">
                    `accuser` = #{accuser} and                 </if>
			                <if test="accdate != null and accdate != '' ">
                    `accdate` = #{accdate} and                 </if>
			                <if test="uptdate != null and uptdate != '' ">
                    `uptdate` = #{uptdate}                </if>
			        </where>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from paymentmain 
	</select>
	 
	<insert id="save" parameterType="com.ruanchuangsoft.platform.entity.PaymentmainEntity" useGeneratedKeys="true" keyProperty="id">
		insert into paymentmain
		(
			`billno`, 
			`reqbillno`, 
			`requser`, 
			`deptid`, 
			`reqdate`, 
			`orderbillno`, 
			`percent`, 
			`paytotal`, 
			`paysource`, 
			`payee`, 
			`payeeaccount`, 
			`paytype`, 
			`payreason`, 
			`ordertype`, 
			`billstatus`, 
			`makeuser`, 
			`makedate`, 
			`accuser`, 
			`accdate`, 
			`uptdate`
		)
		values
		(
			#{billno}, 
			#{reqbillno}, 
			#{requser}, 
			#{deptid}, 
			#{reqdate}, 
			#{orderbillno}, 
			#{percent}, 
			#{paytotal}, 
			#{paysource}, 
			#{payee}, 
			#{payeeaccount}, 
			#{paytype}, 
			#{payreason}, 
			#{ordertype}, 
			#{billstatus}, 
			#{makeuser}, 
			#{makedate}, 
			#{accuser}, 
			#{accdate}, 
			#{uptdate}
		)
	</insert>
	 
	<update id="update" parameterType="com.ruanchuangsoft.platform.entity.PaymentmainEntity">
		update paymentmain 
		<set>
			<if test="billno != null">`billno` = #{billno}, </if>
			<if test="reqbillno != null">`reqbillno` = #{reqbillno}, </if>
			<if test="requser != null">`requser` = #{requser}, </if>
			<if test="deptid != null">`deptid` = #{deptid}, </if>
			<if test="reqdate != null">`reqdate` = #{reqdate}, </if>
			<if test="orderbillno != null">`orderbillno` = #{orderbillno}, </if>
			<if test="percent != null">`percent` = #{percent}, </if>
			<if test="paytotal != null">`paytotal` = #{paytotal}, </if>
			<if test="paysource != null">`paysource` = #{paysource}, </if>
			<if test="payee != null">`payee` = #{payee}, </if>
			<if test="payeeaccount != null">`payeeaccount` = #{payeeaccount}, </if>
			<if test="paytype != null">`paytype` = #{paytype}, </if>
			<if test="payreason != null">`payreason` = #{payreason}, </if>
			<if test="ordertype != null">`ordertype` = #{ordertype}, </if>
			<if test="billstatus != null">`billstatus` = #{billstatus}, </if>
			<if test="makeuser != null">`makeuser` = #{makeuser}, </if>
			<if test="makedate != null">`makedate` = #{makedate}, </if>
			<if test="accuser != null">`accuser` = #{accuser}, </if>
			<if test="accdate != null">`accdate` = #{accdate}, </if>
			<if test="uptdate != null">`uptdate` = #{uptdate}</if>
		</set>
		where id = #{id}
	</update>


    <update id="auditBatch">
        update  paymentmain set billstatus=billstatus+1 where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="unauditBatch">
        update  paymentmain set billstatus=billstatus-1 where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
	
	<delete id="delete">
		delete from paymentmain where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from paymentmain where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>