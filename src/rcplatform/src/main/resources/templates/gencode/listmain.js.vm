
var vm = new Vue({
	el:'#rrapp',
	data:{
		showList: true,
        showDetailList:true,
		title: null,
    //用于日期快捷控件
    pickerOptions1: {
        shortcuts: [{
            text: '今天',
            onClick(picker) {
                picker.$emit('pick', new Date());
            }
        }, {
            text: '昨天',
            onClick(picker) {
                const date = new Date();
                date.setTime(date.getTime() - 3600 * 1000 * 24);
                picker.$emit('pick', date);
            }
        }, {
            text: '一周前',
            onClick(picker) {
                const date = new Date();
                date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);
                picker.$emit('pick', date);
            }
        }]
    },

        //用户下拉参照的属性
        #foreach($column in $refcolumns)
            #if($column.columnName != $pk.columnName)
                #if($column.refType=="combo")
                    ref_${column.refTable}:[],
                #elseif($column.refType=="enum")
                    ref_enum${column.refTable}:[],

                #end
            #end
        #end


        //单据主表实体类
		${classname}: {
            #foreach($column in $columns)
                #if($column.columnName != $pk.columnName)
                    #if($column.columnName.equalsIgnoreCase('billno'))
                        ${column.attrname}:"*",
                    #elseif ($column.columnName.equalsIgnoreCase('makeuser'))
                        ${column.attrname}:gUserName,
                    #elseif ($column.columnName.equalsIgnoreCase('makedate'))
                        ${column.attrname}:""#if($velocityCount != $columns.size()), #end
                    #else
                        ${column.attrname}:"",
                    #end
                #end
            #end
            details:[]

        }
	},
	methods: {
		query: function () {
			vm.reload();
		},
        showdetail: function () {
            vm.showDetailList=!vm.showDetailList;
            if(vm.showDetailList){
                initGridHeightHalf("#jqGrid");
                initGridHeightHalf("#jqGridDetail");
            }
            else{
                initGridHeight("#jqGrid");
            }
        },
		add: function(){
            var mktime=moment().format("YYYY-MM-DD");
			vm.showList = false;
            vm.showDetailList=false;
			vm.title = "新增";
			vm.${classname} = {
                #foreach($column in $columns)
                    #if($column.columnName != $pk.columnName)
                        #if($column.columnName.equalsIgnoreCase('billno'))
                            ${column.attrname}:"*",
                        #elseif ($column.columnName.equalsIgnoreCase('makeuser'))
                            ${column.attrname}:gUserName,
                        #elseif ($column.columnName.equalsIgnoreCase('makedate'))
                            ${column.attrname}:mktime#if($velocityCount != $columns.size()), #end
                        #else
                            ${column.attrname}:"",
                        #end
                    #end
                #end
                details:[]};
            vm.additem();
		},
		update: function (event) {
			var $pk.attrname = getSelectedRow();
			if($pk.attrname == null){
				return ;
			}
			vm.showList = false;
            vm.showDetailList=false;
            vm.title = "修改";
            
            vm.getInfo(${pk.attrname})
		},
		saveOrUpdate: function (event) {
			var url = vm.${classname}.${pk.attrname} == null ? "../${pathName}/save" : "../${pathName}/update";
			$.ajax({
				type: "POST",
			    url: url,
			    data: JSON.stringify(vm.${classname}),
			    success: function(r){
			    	if(r.code === 0){
						alert('操作成功', function(index){
							vm.reload();
						});
					}else{
						alert(r.msg);
					}
				}
			});
		},
        audit:function(event){
            var ${pk.attrname}s = getSelectedRows();
            if(${pk.attrname}s == null){
                return ;
            }

            confirm('确定要删除选中的记录？', function(){
                $.ajax({
                    type: "POST",
                    url: "../${pathName}/audit",
                    data: JSON.stringify(${pk.attrname}s),
                    success: function(r){
                        if(r.code == 0){
                            alert('操作成功', function(index){
                                $("#jqGrid").trigger("reloadGrid");
                            });
                        }else{
                            alert(r.msg);
                        }
                    }
                });
            });
        },

        unaudit:function(){
            var ${pk.attrname}s = getSelectedRows();
            if(${pk.attrname}s == null){
                return ;
            }

            confirm('确定要删除选中的记录？', function(){
                $.ajax({
                    type: "POST",
                    url: "../${pathName}/unaudit",
                    data: JSON.stringify(${pk.attrname}s),
                    success: function(r){
                        if(r.code == 0){
                            alert('操作成功', function(index){
                                $("#jqGrid").trigger("reloadGrid");
                            });
                        }else{
                            alert(r.msg);
                        }
                    }
                });
            });
        },

		del: function (event) {
			var ${pk.attrname}s = getSelectedRows();
			if(${pk.attrname}s == null){
				return ;
			}
			
			confirm('确定要删除选中的记录？', function(){
				$.ajax({
					type: "POST",
				    url: "../${pathName}/delete",
				    data: JSON.stringify(${pk.attrname}s),
				    success: function(r){
						if(r.code == 0){
							alert('操作成功', function(index){
								$("#jqGrid").trigger("reloadGrid");
							});
						}else{
							alert(r.msg);
						}
					}
				});
			});
		},

        //生成参照调用函数
        #foreach($column in $columns)
            #if($column.refColumn && $column.refType.equalsIgnoreCase("dialog"))
                select${column.attrname}${column.refTable}: function (event) {
                    showrefgrid_${column.refTable}("参照", function (data) {
                        var seldata = data;
                        vm.${classname}.${column.attrname} =seldata['id'];
                        vm.${classname}.${column.attrname}${column.refTable}${column.refColumnName} =seldata['name'];
                    });
                },
            #end
        #end

        //生成参照调用下拉框函数,用来初始化远程数据
        #foreach($column in $refcolumns)
            #if($column.refColumn && $column.refType.equalsIgnoreCase("combo"))
                getRef${column.refTable}: function () {
                    $.get("../${column.refTable}/list?page=1&limit=1000", function (r) {
                        vm.ref_${column.refTable} = r.page.list;
                    });
                },
            #elseif($column.refColumn && $column.refType.equalsIgnoreCase("enum"))
                getRef${column.refTable}: function () {
                    $.get("../enumtable/listone?enumid=${column.refTable}&page=1&limit=1000", function (r) {
                        vm.ref_enum${column.refTable} = r.page.list;
                    });
                },
            #end
        #end

        getInfo: function(${pk.attrname}){
            $.get("../${pathName}/info/"+${pk.attrname}, function(r){
                vm.${classname} = r.${classname};
            });
        },
        reload: function (event) {
            vm.showList = true;
            vm.showDetailList = true;
            var page = $("#jqGrid").jqGrid('getGridParam','page');
            $("#jqGrid").jqGrid('setGridParam',{
                page:page
            }).trigger("reloadGrid");
        },


        //单据明细的相关操作
        queryDetail:function(){
            var id = getSelectedRow();
            if (id == null) {
                return;
            }
            vm.showDetailList = true;

            $("#jqGridDetail").jqGrid('setGridParam', {
                page: 1,
                postData:{'formid':id},
                datatype: "json"
            }).trigger("reloadGrid");
        },

        //增加明细表一条记录
        additem:function(){
            var mktime=moment().format("YYYY-MM-DD");
            var idx=vm.${classname}.details.length;
            var item={
                #foreach($column in $detailcolumns)
                    #if($column.columnName.equalsIgnoreCase('billno'))
                        ${column.attrname}:"*"#if($velocityCount != $columns.size()), #end
                    #elseif ($column.columnName.equalsIgnoreCase('serialno'))
                        ${column.attrname}:idx#if($velocityCount != $columns.size()), #end
                    #elseif ($column.columnName.endsWith('date'))
                        ${column.attrname}:mktime#if($velocityCount != $columns.size()), #end
                    #else
                        ${column.attrname}:""#if($velocityCount != $columns.size()), #end
                    #end
                #end

            };


            vm.${classname}.details.push(item);
        },

        selectitem:function(index){
            var sel=index;
            var item=vm.${classname}.details[sel];
        },
        delitem:function(event){
            var obj=event.currentTarget;
            var index=obj.attributes['idx'].value
            vm.${classname}.details.splice(index, 1);
            for(var i=0;i<vm.${classname}.details.length;i++){
                vm.${classname}.details[i].serialno=i;
            }
        }
	}
});

$(function () {
    $("#jqGrid").jqGrid({
        url: '../${pathName}/list',
        datatype: "json",
        colModel: [
			#foreach($column in $columns)
				#if($column.columnName == $pk.columnName)
                    { label: '${column.attrname}', name: '${column.attrname}', width: 50, key: true },
                #elseif($column.columnName.equalsIgnoreCase("billstatus"))
                    { label: '${column.comments}', name: '${column.attrname}', width: 80 ,formatter:formater_billstatus}#if($velocityCount != $columns.size()), #end

                #elseif($column.refType.equalsIgnoreCase("combo")||$column.refType.equalsIgnoreCase("enum"))
                    { label: '${column.comments}', name: '${column.attrname}${column.refColumnName}', width: 80 }#if($velocityCount != $columns.size()), #end
                #else
                    { label: '${column.comments}', name: '${column.attrname}', width: 80 }#if($velocityCount != $columns.size()), #end

				#end
			#end
        ],
        viewrecords: true,
        height: 385,
        rowNum: 10,
        rowList : [10,30,50],
        rownumbers: true,
        rownumWidth: 25,
        autowidth: true,
        autoScroll: true,
        multiselect: true,
        pager: "#jqGridPager",
        jsonReader : {
            root: "page.list",
            page: "page.currPage",
            total: "page.totalPage",
            records: "page.totalCount"
        },
        prmNames : {
            page:"page",
            rows:"limit",
            order: "order"
        },
        shrinkToFit:false,
        gridComplete:function(){
            //隐藏grid底部滚动条
            //$("#jqGrid").closest(".ui-jqgrid-bdiv").css({ "overflow-x" : "hidden" });
        }
    });


    $("#jqGridDetail").jqGrid({
        url: '../${pathName}/listdetail',
        datatype: "local",
        colModel: [
			#foreach($column in $detailcolumns)
				#if($column.columnName == $pk.columnName)
                    { label: '${column.attrname}', name: '${column.attrname}', width: 50, key: true },
                #elseif($column.refType.equalsIgnoreCase("combo")
                ||$column.refType.equalsIgnoreCase("enum")
                ||$column.refType.equalsIgnoreCase("dialog"))
                    { label: '${column.comments}', name: '${column.attrname}${column.refColumnName}', width: 80 }#if($velocityCount != $columns.size()), #end
				#else
                    { label: '${column.comments}', name: '${column.attrname}', width: 80 }#if($velocityCount != $columns.size()), #end

				#end
			#end
        ],
        viewrecords: true,
        height: 385,
        rowNum: 10,
        rowList : [10,30,50],
        rownumbers: true,
        rownumWidth: 25,
        autowidth: true,
        autoScroll: true,
        multiselect: true,
        pager: "#jqGridPagerDetail",
        jsonReader : {
            root: "page.list",
            page: "page.currPage",
            total: "page.totalPage",
            records: "page.totalCount"
        },
        prmNames : {
            page:"page",
            rows:"limit",
            order: "order"
        },
        shrinkToFit:false,
        gridComplete:function(){
            //隐藏grid底部滚动条
            //$("#jqGrid").closest(".ui-jqgrid-bdiv").css({ "overflow-x" : "hidden" });
        }
    });

    //执行调用参照调用下拉框函数,初始化下拉数据
    #foreach($column in $refcolumns)
        #if($column.refColumn && $column.refType.equalsIgnoreCase("combo"))
            vm.getRef${column.refTable}();
        #elseif($column.refColumn && $column.refType.equalsIgnoreCase("enum"))
            vm.getRef${column.refTable}();
        #end
    #end

    initGridHeightHalf("#jqGrid");
    initGridHeightHalf("#jqGridDetail");
});